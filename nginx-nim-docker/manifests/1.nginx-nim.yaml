apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-nim2
  labels:
    app: nginx-nim2
spec:
  selector:
    matchLabels:
      app: nginx-nim2
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-nim2
    spec:
      containers:
      - name: nginx-nim2
        image: your.registry.tld/nginx-nim2:tag
        ports:
        - name: https
          containerPort: 443
        - name: f5tt
          containerPort: 5000
        env:
          ### NGINX Instance Manager environment
          - name: NIM_USERNAME
            value: admin
          - name: NIM_PASSWORD
            value: nimadmin
          - name: NIM_LICENSE
            value: "<BASE64_ENCODED_LICENSE_FILE>"

          - name: NIM_CLICKHOUSE_ADDRESS
            value: clickhouse
          - name: NIM_CLICKHOUSE_PORT
            value: "9000"
          ### If username is not set to "default", the clickhouse-users ConfigMap in 0.clickhouse.yaml shall be updated accordingly
          - name: NIM_CLICKHOUSE_USERNAME
            value: "default"
          ### If password is not set to "NGINXr0cks", the clickhouse-users ConfigMap in 0.clickhouse.yaml shall be updated accordingly
          - name: NIM_CLICKHOUSE_PASSWORD
            value: "NGINXr0cks"

          ### Second Sight Push mode
          - name: STATS_PUSH_ENABLE
            value: "false"
          - name: STATS_PUSH_MODE
            value: CUSTOM
            #value: NGINX_PUSH
          - name: STATS_PUSH_URL
            value: "http://192.168.1.5/callHome"
          ### Push interval in seconds
          - name: STATS_PUSH_INTERVAL
            value: "1800"

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-nim2
  labels:
    app: nginx-nim2
spec:
  ports:
  - name: https
    port: 443
  - name: f5tt
    port: 5000
  selector:
    app: nginx-nim2
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-nim2-grpc
  labels:
    app: nginx-nim2
spec:
  ports:
  - name: grpc
    port: 443
    nodePort: 30443
  selector:
    app: nginx-nim2
  type: NodePort
